plugins {
    id("org.jetbrains.kotlin.jvm") version "1.6.0"
    id("org.jetbrains.kotlin.kapt") version "1.6.0"
    id("com.github.johnrengelman.shadow") version "7.1.0"
    id("io.micronaut.application") version "3.1.1"
    id("org.jetbrains.kotlin.plugin.allopen") version "1.6.0"
    id("org.jetbrains.kotlin.plugin.serialization") version "1.6.0"
    id("org.sonarqube") version "3.3"
    id("jacoco")
}

version = "0.1"
group = "practice.imagine"

ext {
    javaVersion = '15'
    kotlinVersion='1.6.0'
    awsSDKVersion = '2.17.155'
    dynamoDBLocalVersion = '1.16.0'
}

repositories {
    mavenCentral()
    maven {
        url "https://weldnorthanalytics.mycloudrepo.io/repositories/doolittle/"
        credentials {
            username "ops+readonly@weldnorthanalytics.com"
            password "wrudaDepugizist#6omu"
        }
    }
}

dependencies {
    kapt("io.micronaut:micronaut-http-validation")
    kapt("io.micronaut.openapi:micronaut-openapi:3.2.0")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut.reactor:micronaut-reactor-http-client")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.beanvalidation:micronaut-hibernate-validator")
    implementation("io.micronaut.kotlin:micronaut-kotlin-runtime")
    implementation("io.micronaut.micrometer:micronaut-micrometer-registry-prometheus:1.3.1")
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-management")
    implementation("io.projectreactor.kotlin:reactor-kotlin-extensions:1.1.5")
    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    implementation("software.amazon.awssdk:dynamodb-enhanced:${awsSDKVersion}")
    implementation("io.swagger.core.v3:swagger-annotations:2.1.11")
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.1")
    implementation("com.edgenuity.rad:caliper-plus-java:1.2.1-SNAPSHOT") {
        changing(true)
        exclude(group: "org.apache.logging.log4j")
    }

    runtimeOnly("ch.qos.logback:logback-classic:1.2.8")

    testImplementation("org.junit.jupiter:junit-jupiter-params:5.8.2")
    testImplementation("com.amazonaws:DynamoDBLocal-NoKotlinRT:${dynamoDBLocalVersion}")
    testImplementation("org.mockito.kotlin:mockito-kotlin:4.0.0")
}


application {
    mainClass.set("practice.imagine.ApplicationKt")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
}

tasks {
    compileKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
}

task runLocal(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass.set("practice.imagine.ApplicationKt")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("practice.imagine.*")
    }
}


